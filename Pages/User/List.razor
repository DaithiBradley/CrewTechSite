@page "/user/list"
@using Microsoft.AspNetCore.Identity
@inject IJSRuntime JSRuntime
@inject UserManager<IdentityUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
<!--begin::Tables widget 16-->
@if(authMessage == "Success") {
	<div class="tab-content">
		<div class="tab-pane fade show active" id="kt_stats_widget_16_tab_1">
			<!--begin::Table container-->
			<div class="table-responsive">
				<!--begin::Table-->
				<table class="table table-row-dashed align-middle gs-0 gy-3 my-0">
					<!--begin::Table head-->
					<thead>
						<tr class="fs-7 fw-bold text-gray-400 border-bottom-0">
							<th class="p-0 pb-3 min-w-150px text-start">UserName</th>
							<th class="p-0 pb-3 min-w-100px text-end pe-13">Email</th>
						</tr>
					</thead>
					<!--end::Table head-->
					<!--begin::Table body-->
					<tbody>
						@foreach (var user in UserManager.Users)
						{
							<tr>
								<td>
									<div class="d-flex align-items-center">
										<div class="symbol symbol-50px me-3">
											<img src="assets/media/avatars/300-1.jpg" class="" alt="" />
										</div>
										<div class="d-flex justify-content-start flex-column">
											<a href="?page=pages/user-profile/overview" class="text-gray-800 fw-bold text-hover-primary mb-1 fs-6">@user.UserName</a>
											<span class="text-gray-400 fw-semibold d-block fs-7">Bosnia</span>
										</div>
									</div>
								</td>
								<td class="text-end pe-13">
									<span class="text-gray-600 fw-bold fs-6">@user.Email</span>
								</td>
							</tr>
						}
					</tbody>
					<!--end::Table body-->
				</table>
				<!--end::Table-->
			</div>
			<!--end::Table container-->
		</div>
	</div>
	<!--end::Tab Content-->
}
@if (authMessage == "Failed") {
	<h1>The user is not authenticated.</h1>
}

@code {
	private string authMessage;
	private string UserName;
	private string UserEmail;
	protected override async Task OnInitializedAsync()
	{
		var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;
		UserName = user.Identity.Name;
		if (user.Identity.IsAuthenticated)
		{
			authMessage = "Success";
		}
		else
		{
			authMessage = "Failed";
		}

	}
}